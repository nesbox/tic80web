name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  generate-help-md:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          repository: nesbox/tic-80
          ref: sokol
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install
        run: |
          sudo apt-get install build-essential libxi-dev libxcursor-dev libasound2-dev libgl-dev -y

      - name: Build
        run: |
          cd build
          cmake ..
          cmake --build . --parallel

      - name: Export help.md and version.md
        run: |
          build/bin/tic80 --cli --fs=. --cmd='export help help.md'
          build/bin/tic80 --cli --fs=. --cmd="help version" > version.txt

      - name: Upload help.md and version.txt
        uses: actions/upload-artifact@v4
        with:
          name: help-md
          path: |
            help.md
            version.txt

  webapp:
    runs-on: ubuntu-latest

    steps:
      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4
        with:
          repository: nesbox/tic-80
          ref: sokol
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build all
        run: |
          cd build
          emcmake cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-webapp"
          path: |
            build/bin/*

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: |
      webapp
      generate-help-md
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download tic80-webapp artifact
        uses: actions/download-artifact@v4
        with:
          name: tic80-webapp
          path: public

      - name: Download help.md artifact
        uses: actions/download-artifact@v4
        with:
          name: help-md
          path: src/data

      - name: Setup Go
        if: github.event_name == 'schedule'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build and run sync.go
        if: github.event_name == 'schedule'
        run: |
          go mod tidy
          go run .

      - name: Commit changes
        if: github.event_name == 'schedule'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "Update data files" || echo "No changes to commit"
          git push

      - name: Setup Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies 
        run: npm ci

      - name: Build 
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
